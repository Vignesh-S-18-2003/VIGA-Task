{"ast":null,"code":"import axios from \"axios\";\n\n// Base URL configuration\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Adjust as per your backend server's base URL\n\n// --- Authentication APIs ---\n\n/**\r\n * Register a new user\r\n * @param {Object} user - { username, password }\r\n */\nexport const registerUser = user => axios.post(`${API_BASE_URL}/auth/register`, user);\n\n/**\r\n * Login user\r\n * @param {Object} credentials - { username, password }\r\n */\nexport const loginUser = credentials => axios.post(`${API_BASE_URL}/auth/login`, credentials);\n\n// --- Book APIs ---\n\n/**\r\n * Fetch all books\r\n */\nexport const fetchBooks = () => axios.get(`${API_BASE_URL}/books`);\n\n/**\r\n * Fetch book details by ID\r\n * @param {string} bookId\r\n */\nexport const fetchBookDetails = bookId => axios.get(`${API_BASE_URL}/books/${bookId}`);\n\n/**\r\n * Add a new book\r\n * @param {Object} book - { title, author, isbn, genre, coverImage }\r\n * @param {string} token - Auth token\r\n */\nexport const addBook = (book, token) => axios.post(`${API_BASE_URL}/books`, book, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n/**\r\n * Edit an existing book\r\n * @param {string} bookId\r\n * @param {Object} updatedBook - { title, author, isbn, genre, coverImage }\r\n * @param {string} token - Auth token\r\n */\nexport const editBook = (bookId, updatedBook, token) => axios.put(`${API_BASE_URL}/books/${bookId}`, updatedBook, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n/**\r\n * Delete a book\r\n * @param {string} bookId\r\n * @param {string} token - Auth token\r\n */\nexport const deleteBook = (bookId, token) => axios.delete(`${API_BASE_URL}/books/${bookId}`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n/**\r\n * Search books by query (title, author, or ISBN)\r\n * @param {string} query - Search term\r\n */\nexport const searchBooks = query => axios.get(`${API_BASE_URL}/books/search`, {\n  params: {\n    query\n  }\n});\n\n// --- Review APIs ---\n\n/**\r\n * Add a review to a book\r\n * @param {string} bookId\r\n * @param {Object} review - { username, rating, comment }\r\n */\nexport const addReview = (bookId, review) => axios.post(`${API_BASE_URL}/books/${bookId}/reviews`, review);\nexport const editReview = (bookId, reviewId, updatedReview) => axios.put(`${API_BASE_URL}/books/${bookId}/reviews/${reviewId}`, updatedReview);\nexport const deleteReview = (bookId, reviewId) => axios.delete(`${API_BASE_URL}/books/${bookId}/reviews/${reviewId}`);\nexport const uploadImage = imageFile => {\n  const formData = new FormData();\n  formData.append(\"image\", imageFile);\n  return axios.post(`${API_BASE_URL}/upload`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","user","post","loginUser","credentials","fetchBooks","get","fetchBookDetails","bookId","addBook","book","token","headers","Authorization","editBook","updatedBook","put","deleteBook","delete","searchBooks","query","params","addReview","review","editReview","reviewId","updatedReview","deleteReview","uploadImage","imageFile","formData","FormData","append"],"sources":["C:/Users/vignesh/Desktop/Pep/VIGA Task/VIGA-Task/client/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base URL configuration\r\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Adjust as per your backend server's base URL\r\n\r\n// --- Authentication APIs ---\r\n\r\n/**\r\n * Register a new user\r\n * @param {Object} user - { username, password }\r\n */\r\nexport const registerUser = (user) => axios.post(`${API_BASE_URL}/auth/register`, user);\r\n\r\n/**\r\n * Login user\r\n * @param {Object} credentials - { username, password }\r\n */\r\nexport const loginUser = (credentials) =>\r\n  axios.post(`${API_BASE_URL}/auth/login`, credentials);\r\n\r\n// --- Book APIs ---\r\n\r\n/**\r\n * Fetch all books\r\n */\r\nexport const fetchBooks = () => axios.get(`${API_BASE_URL}/books`);\r\n\r\n/**\r\n * Fetch book details by ID\r\n * @param {string} bookId\r\n */\r\nexport const fetchBookDetails = (bookId) => axios.get(`${API_BASE_URL}/books/${bookId}`);\r\n\r\n/**\r\n * Add a new book\r\n * @param {Object} book - { title, author, isbn, genre, coverImage }\r\n * @param {string} token - Auth token\r\n */\r\nexport const addBook = (book, token) =>\r\n  axios.post(`${API_BASE_URL}/books`, book, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n/**\r\n * Edit an existing book\r\n * @param {string} bookId\r\n * @param {Object} updatedBook - { title, author, isbn, genre, coverImage }\r\n * @param {string} token - Auth token\r\n */\r\nexport const editBook = (bookId, updatedBook, token) =>\r\n  axios.put(`${API_BASE_URL}/books/${bookId}`, updatedBook, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n/**\r\n * Delete a book\r\n * @param {string} bookId\r\n * @param {string} token - Auth token\r\n */\r\nexport const deleteBook = (bookId, token) =>\r\n  axios.delete(`${API_BASE_URL}/books/${bookId}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n/**\r\n * Search books by query (title, author, or ISBN)\r\n * @param {string} query - Search term\r\n */\r\nexport const searchBooks = (query) =>\r\n  axios.get(`${API_BASE_URL}/books/search`, { params: { query } });\r\n\r\n// --- Review APIs ---\r\n\r\n/**\r\n * Add a review to a book\r\n * @param {string} bookId\r\n * @param {Object} review - { username, rating, comment }\r\n */\r\nexport const addReview = (bookId, review) =>\r\n  axios.post(`${API_BASE_URL}/books/${bookId}/reviews`, review);\r\n\r\nexport const editReview = (bookId, reviewId, updatedReview) =>\r\n  axios.put(`${API_BASE_URL}/books/${bookId}/reviews/${reviewId}`, updatedReview);\r\n\r\nexport const deleteReview = (bookId, reviewId) =>\r\n  axios.delete(`${API_BASE_URL}/books/${bookId}/reviews/${reviewId}`);\r\n\r\nexport const uploadImage = (imageFile) => {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", imageFile);\r\n\r\n  return axios.post(`${API_BASE_URL}/upload`, formData, {\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAKH,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,gBAAgB,EAAEE,IAAI,CAAC;;AAEvF;AACA;AACA;AACA;AACA,OAAO,MAAME,SAAS,GAAIC,WAAW,IACnCN,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,aAAa,EAAEK,WAAW,CAAC;;AAEvD;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,QAAQ,CAAC;;AAElE;AACA;AACA;AACA;AACA,OAAO,MAAMQ,gBAAgB,GAAIC,MAAM,IAAKV,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,UAAUS,MAAM,EAAE,CAAC;;AAExF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,KAAK,KACjCb,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,QAAQ,EAAEW,IAAI,EAAE;EACxCE,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUF,KAAK;EAAG;AAC9C,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,QAAQ,GAAGA,CAACN,MAAM,EAAEO,WAAW,EAAEJ,KAAK,KACjDb,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,UAAUS,MAAM,EAAE,EAAEO,WAAW,EAAE;EACxDH,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUF,KAAK;EAAG;AAC9C,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,UAAU,GAAGA,CAACT,MAAM,EAAEG,KAAK,KACtCb,KAAK,CAACoB,MAAM,CAAC,GAAGnB,YAAY,UAAUS,MAAM,EAAE,EAAE;EAC9CI,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUF,KAAK;EAAG;AAC9C,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;AACA,OAAO,MAAMQ,WAAW,GAAIC,KAAK,IAC/BtB,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,eAAe,EAAE;EAAEsB,MAAM,EAAE;IAAED;EAAM;AAAE,CAAC,CAAC;;AAElE;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,SAAS,GAAGA,CAACd,MAAM,EAAEe,MAAM,KACtCzB,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,UAAUS,MAAM,UAAU,EAAEe,MAAM,CAAC;AAE/D,OAAO,MAAMC,UAAU,GAAGA,CAAChB,MAAM,EAAEiB,QAAQ,EAAEC,aAAa,KACxD5B,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,UAAUS,MAAM,YAAYiB,QAAQ,EAAE,EAAEC,aAAa,CAAC;AAEjF,OAAO,MAAMC,YAAY,GAAGA,CAACnB,MAAM,EAAEiB,QAAQ,KAC3C3B,KAAK,CAACoB,MAAM,CAAC,GAAGnB,YAAY,UAAUS,MAAM,YAAYiB,QAAQ,EAAE,CAAC;AAErE,OAAO,MAAMG,WAAW,GAAIC,SAAS,IAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;EAEnC,OAAO/B,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,SAAS,EAAE+B,QAAQ,EAAE;IACpDlB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}